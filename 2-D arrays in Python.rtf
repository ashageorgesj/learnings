{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf400
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 Menlo-Regular;\f2\fmodern\fcharset0 CourierNewPSMT;
}
{\colortbl;\red255\green255\blue255;\red9\green136\blue90;\red0\green0\blue255;\red196\green204\blue204;
}
{\*\expandedcolortbl;;\csgenericrgb\c3529\c53333\c35294;\csgenericrgb\c0\c0\c100000;\csgenericrgb\c76863\c80000\c80000;
}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\ri0\partightenfactor0

\f0\fs24 \cf0 Today, I learned about 2-D arrays and the right way of indexing them. Suppose we have a 2_D array \
Myarray = [[1,2,3],\
                     [4,5,6],\
                     [7,8,9]]\
\
So, if we want to access [[1,2][4,5]], given my Matlab background I would do Myarray[0:2][0:2]\
\pard\pardeftab720\ri0\sl315\partightenfactor0

\f1\fs21 \cf0 myArray = [[\cf2 1\cf0 ,\cf2 2\cf0 ,\cf2 3\cf0 ],[\cf2 4\cf0 ,\cf2 5\cf0 ,\cf2 6\cf0 ],[\cf2 7\cf0 ,\cf2 8\cf0 ,\cf2 9\cf0 ]]\
\pard\pardeftab720\ri0\sl315\partightenfactor0
\cf3 print\cf0  myArray[\cf2 0\cf0 :\cf2 2\cf0 ][\cf2 0\cf0 :\cf2 2\cf0 ]\
\pard\tx916\tx1832\tx2748\tx3664\tx4580\tx5496\tx6412\tx7328\tx8244\tx9160\tx10076\tx10992\tx11908\tx12824\tx13740\tx14656\pardeftab720\ri0\partightenfactor0

\f2 \cf4 [[1, 2, 3], [4, 5, 6]]\
\pard\pardeftab720\ri0\partightenfactor0

\f0\fs24 \cf0 \
My convoluted way of doing :\
\pard\pardeftab720\ri0\sl315\partightenfactor0

\f1\fs21 \cf0 current = []\
myBase = myArray[\cf2 0\cf0 :\cf2 2\cf0 ]\
current.append(myArray[\cf2 0\cf0 ][\cf2 0\cf0 :\cf2 2\cf0 ])\
current.append(myArray[\cf2 1\cf0 ][\cf2 0\cf0 :\cf2 2\cf0 ])\
\pard\pardeftab720\ri0\sl315\partightenfactor0
\cf3 print\cf0  current\
\pard\pardeftab720\ri0\partightenfactor0

\f0\fs24 \cf0 \
\pard\tx916\tx1832\tx2748\tx3664\tx4580\tx5496\tx6412\tx7328\tx8244\tx9160\tx10076\tx10992\tx11908\tx12824\tx13740\tx14656\pardeftab720\ri0\partightenfactor0

\f2\fs21 \cf4 [[1, 2], [4, 5]]\
\pard\pardeftab720\ri0\partightenfactor0

\f0\fs24 \cf0 \
\
Also this feature is available in the numpy library.This is a good resource. http://ilan.schnell-web.net/prog/slicing/\
}